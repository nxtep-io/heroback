"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const URI = require("urijs");
;
class UriUtils {
    static parse(input, defaults = {}) {
        if (!input || toString.call(input) !== toString.call('str')) {
            throw new Error(`Invalid database URL, expecting string but got ${toString.call(input)}`);
        }
        const uri = new URI(input);
        const results = {
            host: uri.host() || defaults.host,
            port: uri.port() || defaults.port,
            protocol: uri.protocol() || defaults.protocol,
            username: uri.username() || defaults.username,
            password: uri.password() || defaults.password,
            database: uri.path().replace('/', ''),
        };
        if (!results.host || !results.host.length) {
            throw new Error('Invalid database URL, host is not defined');
        }
        if (!results.port || !results.port.length) {
            throw new Error('Invalid database URL, port is not defined');
        }
        if (!results.database || !results.database.length) {
            throw new Error('Invalid database URL, database name is not defined');
        }
        return results;
    }
}
exports.default = UriUtils;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXJpLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbGliL3V0aWxzL3VyaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDZCQUE2QjtBQVM1QixDQUFDO0FBRUYsTUFBcUIsUUFBUTtJQUVwQixNQUFNLENBQUMsS0FBSyxDQUFDLEtBQWEsRUFBRSxXQUFxQyxFQUFFO1FBQ3hFLElBQUcsQ0FBQyxLQUFLLElBQUksUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQzFELE1BQU0sSUFBSSxLQUFLLENBQUMsa0RBQWtELFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQzNGO1FBRUQsTUFBTSxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDM0IsTUFBTSxPQUFPLEdBQUc7WUFDZCxJQUFJLEVBQUUsR0FBRyxDQUFDLElBQUksRUFBRSxJQUFJLFFBQVEsQ0FBQyxJQUFJO1lBQ2pDLElBQUksRUFBRSxHQUFHLENBQUMsSUFBSSxFQUFFLElBQUksUUFBUSxDQUFDLElBQUk7WUFDakMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxRQUFRLEVBQUUsSUFBSSxRQUFRLENBQUMsUUFBUTtZQUM3QyxRQUFRLEVBQUUsR0FBRyxDQUFDLFFBQVEsRUFBRSxJQUFJLFFBQVEsQ0FBQyxRQUFRO1lBQzdDLFFBQVEsRUFBRSxHQUFHLENBQUMsUUFBUSxFQUFFLElBQUksUUFBUSxDQUFDLFFBQVE7WUFDN0MsUUFBUSxFQUFFLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQztTQUN0QyxDQUFDO1FBRUYsSUFBRyxDQUFDLE9BQU8sQ0FBQyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUN4QyxNQUFNLElBQUksS0FBSyxDQUFDLDJDQUEyQyxDQUFDLENBQUM7U0FDOUQ7UUFFRCxJQUFHLENBQUMsT0FBTyxDQUFDLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ3hDLE1BQU0sSUFBSSxLQUFLLENBQUMsMkNBQTJDLENBQUMsQ0FBQztTQUM5RDtRQUVELElBQUcsQ0FBQyxPQUFPLENBQUMsUUFBUSxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUU7WUFDaEQsTUFBTSxJQUFJLEtBQUssQ0FBQyxvREFBb0QsQ0FBQyxDQUFDO1NBQ3ZFO1FBRUQsT0FBTyxPQUFPLENBQUM7SUFDakIsQ0FBQztDQUNGO0FBL0JELDJCQStCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFVSSSBmcm9tICd1cmlqcyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVXJpUGFyYW1zU2NoZW1hIHtcbiAgaG9zdDogc3RyaW5nLFxuICBwb3J0OiBzdHJpbmcsXG4gIGRhdGFiYXNlOiBzdHJpbmcsXG4gIHVzZXJuYW1lOiBzdHJpbmcsXG4gIHBhc3N3b3JkOiBzdHJpbmcsXG4gIHByb3RvY29sOiBzdHJpbmcsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVcmlVdGlscyB7XG5cbiAgcHVibGljIHN0YXRpYyBwYXJzZShpbnB1dDogc3RyaW5nLCBkZWZhdWx0czogUGFydGlhbDxVcmlQYXJhbXNTY2hlbWE+ID0ge30pOiBVcmlQYXJhbXNTY2hlbWEge1xuICAgIGlmKCFpbnB1dCB8fCB0b1N0cmluZy5jYWxsKGlucHV0KSAhPT0gdG9TdHJpbmcuY2FsbCgnc3RyJykpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBkYXRhYmFzZSBVUkwsIGV4cGVjdGluZyBzdHJpbmcgYnV0IGdvdCAke3RvU3RyaW5nLmNhbGwoaW5wdXQpfWApO1xuICAgIH1cblxuICAgIGNvbnN0IHVyaSA9IG5ldyBVUkkoaW5wdXQpO1xuICAgIGNvbnN0IHJlc3VsdHMgPSB7XG4gICAgICBob3N0OiB1cmkuaG9zdCgpIHx8IGRlZmF1bHRzLmhvc3QsXG4gICAgICBwb3J0OiB1cmkucG9ydCgpIHx8IGRlZmF1bHRzLnBvcnQsXG4gICAgICBwcm90b2NvbDogdXJpLnByb3RvY29sKCkgfHwgZGVmYXVsdHMucHJvdG9jb2wsXG4gICAgICB1c2VybmFtZTogdXJpLnVzZXJuYW1lKCkgfHwgZGVmYXVsdHMudXNlcm5hbWUsXG4gICAgICBwYXNzd29yZDogdXJpLnBhc3N3b3JkKCkgfHwgZGVmYXVsdHMucGFzc3dvcmQsXG4gICAgICBkYXRhYmFzZTogdXJpLnBhdGgoKS5yZXBsYWNlKCcvJywgJycpLFxuICAgIH07XG5cbiAgICBpZighcmVzdWx0cy5ob3N0IHx8ICFyZXN1bHRzLmhvc3QubGVuZ3RoKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgZGF0YWJhc2UgVVJMLCBob3N0IGlzIG5vdCBkZWZpbmVkJyk7XG4gICAgfVxuXG4gICAgaWYoIXJlc3VsdHMucG9ydCB8fCAhcmVzdWx0cy5wb3J0Lmxlbmd0aCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGRhdGFiYXNlIFVSTCwgcG9ydCBpcyBub3QgZGVmaW5lZCcpO1xuICAgIH1cblxuICAgIGlmKCFyZXN1bHRzLmRhdGFiYXNlIHx8ICFyZXN1bHRzLmRhdGFiYXNlLmxlbmd0aCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGRhdGFiYXNlIFVSTCwgZGF0YWJhc2UgbmFtZSBpcyBub3QgZGVmaW5lZCcpO1xuICAgIH1cblxuICAgIHJldHVybiByZXN1bHRzO1xuICB9XG59XG4iXX0=